# Generated by Django 5.2.5 on 2025-09-04 10:25

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("accounts", "0001_initial"),
        ("members", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="CreditCard",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
                (
                    "is_deleted",
                    models.BooleanField(default=False, verbose_name="Excluído"),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Excluído em"
                    ),
                ),
                ("name", models.CharField(max_length=200, verbose_name="Nome")),
                (
                    "on_card_name",
                    models.CharField(max_length=200, verbose_name="Nome no cartão"),
                ),
                (
                    "flag",
                    models.CharField(
                        choices=[
                            ("MSC", "Master Card"),
                            ("VSA", "Visa"),
                            ("ELO", "Elo"),
                            ("EXP", "American Express"),
                            ("HCD", "Hipercard"),
                        ],
                        max_length=200,
                        verbose_name="Bandeira",
                    ),
                ),
                ("validation_date", models.DateField(verbose_name="Data de Validade")),
                (
                    "_security_code",
                    models.TextField(
                        default="123",
                        help_text="Campo criptografado para armazenar o CVV",
                        verbose_name="Código de Segurança (Criptografado)",
                    ),
                ),
                (
                    "credit_limit",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        verbose_name="Limite de crédito",
                    ),
                ),
                (
                    "max_limit",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Limite Máximo"
                    ),
                ),
                (
                    "_card_number",
                    models.TextField(
                        blank=True,
                        help_text="Campo criptografado",
                        null=True,
                        verbose_name="Número do Cartão (Criptografado)",
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Ativo")),
                (
                    "closing_day",
                    models.IntegerField(
                        blank=True,
                        help_text="Dia do mês em que a fatura fecha",
                        null=True,
                        verbose_name="Dia de Fechamento",
                    ),
                ),
                (
                    "due_day",
                    models.IntegerField(
                        blank=True,
                        help_text="Dia do mês em que a fatura vence",
                        null=True,
                        verbose_name="Dia de Vencimento",
                    ),
                ),
                (
                    "interest_rate",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="Taxa de Juros (%)",
                    ),
                ),
                (
                    "annual_fee",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Anuidade",
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, null=True, verbose_name="Observações"),
                ),
                (
                    "associated_account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="accounts.account",
                        verbose_name="Conta associada",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Criado por",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="members.member",
                        verbose_name="Proprietário",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Atualizado por",
                    ),
                ),
            ],
            options={
                "verbose_name": "Cartão de Crédito",
                "verbose_name_plural": "Cartões de Crédito",
            },
        ),
        migrations.CreateModel(
            name="CreditCardBill",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
                (
                    "is_deleted",
                    models.BooleanField(default=False, verbose_name="Excluído"),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Excluído em"
                    ),
                ),
                (
                    "year",
                    models.CharField(
                        choices=[
                            ("2025", "2025"),
                            ("2026", "2026"),
                            ("2027", "2027"),
                            ("2028", "2028"),
                            ("2029", "2029"),
                            ("2030", "2030"),
                        ],
                        verbose_name="Ano",
                    ),
                ),
                (
                    "month",
                    models.CharField(
                        choices=[
                            ("Jan", "Janeiro"),
                            ("Feb", "Fevereiro"),
                            ("Mar", "Março"),
                            ("Apr", "Abril"),
                            ("May", "Maio"),
                            ("Jun", "Junho"),
                            ("Jul", "Julho"),
                            ("Aug", "Agosto"),
                            ("Sep", "Setembro"),
                            ("Oct", "Outubro"),
                            ("Nov", "Novembro"),
                            ("Dec", "Dezembro"),
                        ],
                        verbose_name="Mês",
                    ),
                ),
                (
                    "invoice_beginning_date",
                    models.DateField(verbose_name="Data de começo da fatura"),
                ),
                (
                    "invoice_ending_date",
                    models.DateField(verbose_name="Data de fim da fatura"),
                ),
                ("closed", models.BooleanField(verbose_name="Fechada")),
                (
                    "total_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=10,
                        verbose_name="Valor Total",
                    ),
                ),
                (
                    "minimum_payment",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=10,
                        verbose_name="Pagamento Mínimo",
                    ),
                ),
                (
                    "due_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Data de Vencimento"
                    ),
                ),
                (
                    "paid_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=10,
                        verbose_name="Valor Pago",
                    ),
                ),
                (
                    "payment_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Data do Pagamento"
                    ),
                ),
                (
                    "interest_charged",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=10,
                        verbose_name="Juros Cobrados",
                    ),
                ),
                (
                    "late_fee",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=10,
                        verbose_name="Multa por Atraso",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("open", "Aberta"),
                            ("closed", "Fechada"),
                            ("paid", "Paga"),
                            ("overdue", "Em atraso"),
                        ],
                        default="open",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Criado por",
                    ),
                ),
                (
                    "credit_card",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="credit_cards.creditcard",
                        verbose_name="Cartão",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Atualizado por",
                    ),
                ),
            ],
            options={
                "verbose_name": "Fatura",
                "verbose_name_plural": "Faturas",
            },
        ),
        migrations.CreateModel(
            name="CreditCardExpense",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
                (
                    "is_deleted",
                    models.BooleanField(default=False, verbose_name="Excluído"),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Excluído em"
                    ),
                ),
                (
                    "description",
                    models.CharField(max_length=200, verbose_name="Descrição"),
                ),
                (
                    "value",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Valor"
                    ),
                ),
                ("date", models.DateField(verbose_name="Data")),
                ("horary", models.TimeField(verbose_name="Horário")),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("food and drink", "Comida e bebida"),
                            ("bills and services", "Contas e serviços"),
                            ("electronics", "Eletrônicos"),
                            ("family and friends", "Amizades e Família"),
                            ("pets", "Animais de estimação"),
                            ("digital signs", "Assinaturas digitais"),
                            ("house", "Casa"),
                            ("purchases", "Compras"),
                            ("donate", "Doações"),
                            ("education", "Educação"),
                            ("loans", "Empréstimos"),
                            ("entertainment", "Entretenimento"),
                            ("taxes", "Impostos"),
                            ("investments", "Investimentos"),
                            ("others", "Outros"),
                            ("vestuary", "Roupas"),
                            ("health and care", "Saúde e cuidados pessoais"),
                            ("professional services", "Serviços profissionais"),
                            ("supermarket", "Supermercado"),
                            ("rates", "Taxas"),
                            ("transport", "Transporte"),
                            ("travels", "Viagens"),
                        ],
                        max_length=200,
                        verbose_name="Categoria",
                    ),
                ),
                ("installment", models.PositiveIntegerField(verbose_name="Parcela")),
                ("payed", models.BooleanField(verbose_name="Paga")),
                (
                    "total_installments",
                    models.IntegerField(default=1, verbose_name="Total de Parcelas"),
                ),
                (
                    "merchant",
                    models.CharField(
                        blank=True,
                        max_length=200,
                        null=True,
                        verbose_name="Estabelecimento",
                    ),
                ),
                (
                    "transaction_id",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="ID da Transação",
                    ),
                ),
                (
                    "location",
                    models.CharField(
                        blank=True,
                        max_length=200,
                        null=True,
                        verbose_name="Local da Compra",
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, null=True, verbose_name="Observações"),
                ),
                (
                    "receipt",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="credit_cards/receipts/",
                        verbose_name="Comprovante",
                    ),
                ),
                (
                    "bill",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="credit_cards.creditcardbill",
                        verbose_name="Fatura Associada",
                    ),
                ),
                (
                    "card",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="credit_cards.creditcard",
                        verbose_name="Cartão",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Criado por",
                    ),
                ),
                (
                    "member",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="members.member",
                        verbose_name="Membro Responsável",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Atualizado por",
                    ),
                ),
            ],
            options={
                "verbose_name": "Despesa de Cartão",
                "verbose_name_plural": "Despesas de Cartão",
                "ordering": ["-id"],
            },
        ),
    ]
