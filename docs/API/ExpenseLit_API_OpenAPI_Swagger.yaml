openapi: 3.0.3
info:
  title: ExpenseLit API
  description: |
    API RESTful para gerenciamento completo de finanças pessoais com sistema robusto de permissões e criptografia de dados sensíveis.
    
    ## Funcionalidades Principais
    - ✅ Gerenciamento de contas bancárias e cartões de crédito
    - ✅ Controle de despesas e receitas por categorias
    - ✅ Sistema de empréstimos e transferências
    - ✅ Cadastro unificado de membros (usuários, credores, beneficiários)
    - ✅ Criptografia automática de dados sensíveis (CVV, números de conta/cartão)
    - ✅ Sistema robusto de permissões baseado no Django
    - ✅ Autenticação JWT com refresh tokens
    
    ## Segurança
    - **Criptografia Fernet**: CVVs e números são automaticamente criptografados
    - **JWT Authentication**: Tokens seguros com refresh
    - **Sistema de Permissões**: Controle granular baseado no Django
    - **Validações Robustas**: Entrada de dados sanitizada
    - **Middleware de Segurança**: Headers de segurança automáticos
    
  version: 1.0.0
  contact:
    name: ExpenseLit API Support
    email: tarcisio.ribeiro.1840@hotmail.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:8002/api/v1
    description: Servidor de Desenvolvimento
  - url: https://api.expenselit.com/v1
    description: Servidor de Produção

security:
  - bearerAuth: []

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: Token JWT obtido através do endpoint de autenticação

  schemas:
    # Authentication Schemas
    TokenRequest:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
          example: admin
        password:
          type: string
          format: password
          example: senha123

    TokenResponse:
      type: object
      properties:
        access:
          type: string
          description: Token de acesso JWT
        refresh:
          type: string
          description: Token de renovação JWT

    RefreshTokenRequest:
      type: object
      required:
        - refresh
      properties:
        refresh:
          type: string
          description: Refresh token para renovação

    UserPermissions:
      type: object
      properties:
        username:
          type: string
        permissions:
          type: array
          items:
            type: string
        is_staff:
          type: boolean
        is_superuser:
          type: boolean

    # Base Model Schema
    BaseModel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
          readOnly: true

    # Account Schema
    Account:
      allOf:
        - $ref: '#/components/schemas/BaseModel'
        - type: object
          required:
            - name
            - account_type
          properties:
            name:
              type: string
              enum: [NUB, SIC, MPG, IFB, CEF]
              description: Nome da instituição financeira
            account_type:
              type: string
              enum: [CC, CS, FG, VA]
              description: Tipo da conta
            account_image:
              type: string
              format: binary
              nullable: true
              description: Logo da conta
            is_active:
              type: boolean
              default: true
            account_number_masked:
              type: string
              readOnly: true
              description: Número da conta mascarado (****1234)
            agency:
              type: string
              nullable: true
              maxLength: 20
            bank_code:
              type: string
              nullable: true
              maxLength: 10
            current_balance:
              type: string
              format: decimal
              default: "0.00"
            minimum_balance:
              type: string
              format: decimal
              default: "0.00"
            opening_date:
              type: string
              format: date
              nullable: true
            description:
              type: string
              nullable: true
            owner:
              type: integer
              nullable: true
              description: ID do membro proprietário

    # Credit Card Schemas
    CreditCard:
      allOf:
        - $ref: '#/components/schemas/BaseModel'
        - type: object
          required:
            - name
            - on_card_name
            - flag
            - validation_date
            - security_code
            - credit_limit
            - max_limit
            - associated_account
          properties:
            name:
              type: string
              maxLength: 200
            on_card_name:
              type: string
              maxLength: 200
              description: Nome impresso no cartão
            flag:
              type: string
              enum: [MSC, VSA, ELO, EXP, HCD]
              description: Bandeira do cartão
            validation_date:
              type: string
              format: date
              description: Data de validade
            security_code:
              type: string
              writeOnly: true
              pattern: "^\\d{3,4}$"
              description: CVV (apenas escrita, nunca retornado)
            credit_limit:
              type: string
              format: decimal
            max_limit:
              type: string
              format: decimal
            associated_account:
              type: integer
              description: ID da conta associada
            card_number_masked:
              type: string
              readOnly: true
              description: Número do cartão mascarado (****1234)
            is_active:
              type: boolean
              default: true
            closing_day:
              type: integer
              nullable: true
              minimum: 1
              maximum: 31
            due_day:
              type: integer
              nullable: true
              minimum: 1
              maximum: 31
            interest_rate:
              type: string
              format: decimal
              nullable: true
              description: Taxa de juros (%)
            annual_fee:
              type: string
              format: decimal
              nullable: true
            owner:
              type: integer
              nullable: true
            notes:
              type: string
              nullable: true

    CreditCardBill:
      allOf:
        - $ref: '#/components/schemas/BaseModel'
        - type: object
          required:
            - credit_card
            - year
            - month
            - invoice_beginning_date
            - invoice_ending_date
            - closed
          properties:
            credit_card:
              type: integer
              description: ID do cartão de crédito
            year:
              type: string
              enum: ["2025", "2026", "2027", "2028", "2029", "2030"]
            month:
              type: string
              enum: [Jan, Feb, Mar, Apr, May, Jun, Jul, Aug, Sep, Oct, Nov, Dec]
            invoice_beginning_date:
              type: string
              format: date
            invoice_ending_date:
              type: string
              format: date
            closed:
              type: boolean
            total_amount:
              type: string
              format: decimal
              default: "0.00"
            minimum_payment:
              type: string
              format: decimal
              default: "0.00"
            due_date:
              type: string
              format: date
              nullable: true
            paid_amount:
              type: string
              format: decimal
              default: "0.00"
            payment_date:
              type: string
              format: date
              nullable: true
            interest_charged:
              type: string
              format: decimal
              default: "0.00"
            late_fee:
              type: string
              format: decimal
              default: "0.00"
            status:
              type: string
              enum: [open, closed, paid, overdue]
              default: open

    CreditCardExpense:
      allOf:
        - $ref: '#/components/schemas/BaseModel'
        - type: object
          required:
            - description
            - value
            - date
            - horary
            - category
            - card
            - installment
            - payed
          properties:
            description:
              type: string
              maxLength: 200
            value:
              type: string
              format: decimal
            date:
              type: string
              format: date
            horary:
              type: string
              format: time
            category:
              $ref: '#/components/schemas/ExpenseCategory'
            card:
              type: integer
              description: ID do cartão usado
            installment:
              type: integer
              minimum: 1
              description: Número da parcela atual
            payed:
              type: boolean
            total_installments:
              type: integer
              default: 1
            merchant:
              type: string
              maxLength: 200
              nullable: true
            transaction_id:
              type: string
              maxLength: 100
              nullable: true
            location:
              type: string
              maxLength: 200
              nullable: true
            bill:
              type: integer
              nullable: true
              description: ID da fatura associada
            member:
              type: integer
              nullable: true
              description: ID do membro responsável
            notes:
              type: string
              nullable: true
            receipt:
              type: string
              format: binary
              nullable: true

    # Expense Schema
    ExpenseCategory:
      type: string
      enum:
        - food and drink
        - bills and services
        - electronics
        - family and friends
        - pets
        - digital signs
        - house
        - purchases
        - donate
        - education
        - loans
        - entertainment
        - taxes
        - investments
        - others
        - vestuary
        - health and care
        - professional services
        - supermarket
        - rates
        - transport
        - travels

    Expense:
      allOf:
        - $ref: '#/components/schemas/BaseModel'
        - type: object
          required:
            - description
            - value
            - date
            - horary
            - category
            - account
            - payed
          properties:
            description:
              type: string
              maxLength: 100
            value:
              type: string
              format: decimal
            date:
              type: string
              format: date
            horary:
              type: string
              format: time
            category:
              $ref: '#/components/schemas/ExpenseCategory'
            account:
              type: integer
              description: ID da conta
            payed:
              type: boolean
            merchant:
              type: string
              maxLength: 200
              nullable: true
            location:
              type: string
              maxLength: 200
              nullable: true
            payment_method:
              type: string
              enum: [cash, debit_card, credit_card, pix, transfer, check, other]
              nullable: true
            receipt:
              type: string
              format: binary
              nullable: true
            member:
              type: integer
              nullable: true
            notes:
              type: string
              nullable: true
            recurring:
              type: boolean
              default: false
            frequency:
              $ref: '#/components/schemas/PaymentFrequency'

    # Revenue Schema
    RevenueCategory:
      type: string
      enum:
        - deposit
        - award
        - salary
        - ticket
        - income
        - refund
        - cashback
        - transfer
        - received_loan
        - loan_devolution

    Revenue:
      allOf:
        - $ref: '#/components/schemas/BaseModel'
        - type: object
          required:
            - description
            - value
            - date
            - horary
            - category
            - account
            - received
          properties:
            description:
              type: string
              maxLength: 200
            value:
              type: string
              format: decimal
            date:
              type: string
              format: date
            horary:
              type: string
              format: time
            category:
              $ref: '#/components/schemas/RevenueCategory'
            account:
              type: integer
            received:
              type: boolean
            source:
              type: string
              maxLength: 200
              nullable: true
            tax_amount:
              type: string
              format: decimal
              default: "0.00"
            net_amount:
              type: string
              format: decimal
              readOnly: true
              description: Calculado automaticamente (value - tax_amount)
            member:
              type: integer
              nullable: true
            receipt:
              type: string
              format: binary
              nullable: true
            recurring:
              type: boolean
              default: false
            frequency:
              $ref: '#/components/schemas/PaymentFrequency'
            notes:
              type: string
              nullable: true

    # Member Schema
    Member:
      allOf:
        - $ref: '#/components/schemas/BaseModel'
        - type: object
          required:
            - name
            - document
            - phone
            - sex
          properties:
            name:
              type: string
              maxLength: 200
            document:
              type: string
              maxLength: 200
              description: CPF/CNPJ único
            phone:
              type: string
              maxLength: 200
            email:
              type: string
              maxLength: 200
              nullable: true
            sex:
              type: string
              enum: [M, F]
            user:
              type: integer
              nullable: true
              description: ID do usuário do sistema (OneToOneField)
            is_user:
              type: boolean
              readOnly: true
              description: True se vinculado a um usuário (calculado)
            is_creditor:
              type: boolean
              default: true
            is_benefited:
              type: boolean
              default: true
            active:
              type: boolean
              default: true
            birth_date:
              type: string
              format: date
              nullable: true
            address:
              type: string
              nullable: true
            profile_photo:
              type: string
              format: binary
              nullable: true
            emergency_contact:
              type: string
              maxLength: 200
              nullable: true
            monthly_income:
              type: string
              format: decimal
              nullable: true
            occupation:
              type: string
              maxLength: 200
              nullable: true
            notes:
              type: string
              nullable: true
            age:
              type: integer
              readOnly: true
              description: Idade calculada baseada na data de nascimento

    # Loan Schema
    Loan:
      allOf:
        - $ref: '#/components/schemas/BaseModel'
        - type: object
          required:
            - description
            - value
            - payed_value
            - date
            - horary
            - category
            - account
            - benefited
            - creditor
            - payed
          properties:
            description:
              type: string
              maxLength: 200
            value:
              type: string
              format: decimal
            payed_value:
              type: string
              format: decimal
            date:
              type: string
              format: date
            horary:
              type: string
              format: time
            category:
              $ref: '#/components/schemas/ExpenseCategory'
            account:
              type: integer
            benefited:
              type: integer
              description: ID do beneficiado (quem recebeu)
            creditor:
              type: integer
              description: ID do credor (quem emprestou)
            payed:
              type: boolean
            interest_rate:
              type: string
              format: decimal
              nullable: true
              description: Taxa de juros (%)
            installments:
              type: integer
              default: 1
            due_date:
              type: string
              format: date
              nullable: true
            contract_document:
              type: string
              format: binary
              nullable: true
            payment_frequency:
              $ref: '#/components/schemas/PaymentFrequency'
            late_fee:
              type: string
              format: decimal
              default: "0.00"
            guarantor:
              type: integer
              nullable: true
              description: ID do avalista
            notes:
              type: string
              nullable: true
            status:
              type: string
              enum: [active, paid, overdue, cancelled]
              default: active

    # Transfer Schema
    Transfer:
      allOf:
        - $ref: '#/components/schemas/BaseModel'
        - type: object
          required:
            - description
            - value
            - date
            - horary
            - category
            - origin_account
            - destiny_account
            - transfered
          properties:
            description:
              type: string
              maxLength: 200
            value:
              type: string
              format: decimal
            date:
              type: string
              format: date
            horary:
              type: string
              format: time
            category:
              type: string
              enum: [doc, ted, pix]
            origin_account:
              type: integer
              description: ID da conta de origem
            destiny_account:
              type: integer
              description: ID da conta de destino
            transfered:
              type: boolean
            transaction_id:
              type: string
              maxLength: 100
              nullable: true
              description: ID único da transação
            fee:
              type: string
              format: decimal
              default: "0.00"
            exchange_rate:
              type: string
              format: decimal
              nullable: true
            processed_at:
              type: string
              format: date-time
              nullable: true
            confirmation_code:
              type: string
              maxLength: 50
              nullable: true
            notes:
              type: string
              nullable: true
            receipt:
              type: string
              format: binary
              nullable: true
            member:
              type: integer
              nullable: true

    # Common Enums
    PaymentFrequency:
      type: string
      enum: [daily, weekly, monthly, quarterly, semiannual, annual]
      nullable: true

    # Error Schemas
    ValidationError:
      type: object
      properties:
        field_name:
          type: array
          items:
            type: string
          description: Lista de erros para um campo específico

    AuthenticationError:
      type: object
      properties:
        detail:
          type: string
        code:
          type: string
        messages:
          type: array
          items:
            type: object
            properties:
              token_class:
                type: string
              token_type:
                type: string
              message:
                type: string

    NotFoundError:
      type: object
      properties:
        detail:
          type: string
          example: "Not found."

    PermissionError:
      type: object
      properties:
        detail:
          type: string
          example: "You do not have permission to perform this action."

    HealthCheck:
      type: object
      properties:
        status:
          type: string
          example: "healthy"
        timestamp:
          type: string
          format: date-time
        database:
          type: string
          example: "ok"

paths:
  # Authentication endpoints
  /authentication/token/:
    post:
      tags:
        - Authentication
      summary: Obter Token JWT
      description: Autentica usuário e retorna tokens JWT (access e refresh)
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRequest'
      responses:
        '200':
          description: Autenticação bem-sucedida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '401':
          description: Credenciais inválidas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationError'

  /authentication/token/refresh/:
    post:
      tags:
        - Authentication
      summary: Renovar Token
      description: Renova o token de acesso usando o refresh token
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenRequest'
      responses:
        '200':
          description: Token renovado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '401':
          description: Refresh token inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationError'

  /authentication/token/verify/:
    post:
      tags:
        - Authentication
      summary: Verificar Token
      description: Verifica se o token de acesso é válido
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - token
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Token válido
        '401':
          description: Token inválido

  /authentication/logout/:
    post:
      tags:
        - Authentication
      summary: Logout
      description: Invalida o refresh token (logout)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenRequest'
      responses:
        '200':
          description: Logout bem-sucedido
        '401':
          $ref: '#/components/responses/Unauthorized'

  /user/permissions/:
    get:
      tags:
        - Authentication
      summary: Obter Permissões do Usuário
      description: Retorna as permissões do usuário autenticado
      responses:
        '200':
          description: Permissões do usuário
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPermissions'
        '401':
          $ref: '#/components/responses/Unauthorized'

  # Accounts endpoints
  /accounts/:
    get:
      tags:
        - Accounts
      summary: Listar Contas
      description: Lista todas as contas do usuário
      responses:
        '200':
          description: Lista de contas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
        '401':
          $ref: '#/components/responses/Unauthorized'

    post:
      tags:
        - Accounts
      summary: Criar Conta
      description: Cria uma nova conta bancária
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        '201':
          description: Conta criada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /accounts/{id}/:
    get:
      tags:
        - Accounts
      summary: Obter Conta
      description: Obtém detalhes de uma conta específica
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Detalhes da conta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '404':
          $ref: '#/components/responses/NotFound'

    put:
      tags:
        - Accounts
      summary: Atualizar Conta
      description: Atualiza uma conta existente
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        '200':
          description: Conta atualizada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '400':
          $ref: '#/components/responses/ValidationError'
        '404':
          $ref: '#/components/responses/NotFound'

    delete:
      tags:
        - Accounts
      summary: Excluir Conta
      description: Exclui uma conta
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Conta excluída com sucesso
        '404':
          $ref: '#/components/responses/NotFound'

  # Credit Cards endpoints
  /credit-cards/:
    get:
      tags:
        - Credit Cards
      summary: Listar Cartões de Crédito
      description: Lista todos os cartões de crédito
      responses:
        '200':
          description: Lista de cartões
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CreditCard'

    post:
      tags:
        - Credit Cards
      summary: Criar Cartão de Crédito
      description: Cria um novo cartão de crédito
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreditCard'
      responses:
        '201':
          description: Cartão criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditCard'
        '400':
          $ref: '#/components/responses/ValidationError'

  /credit-cards/{id}/:
    get:
      tags:
        - Credit Cards
      summary: Obter Cartão de Crédito
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Detalhes do cartão
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditCard'
        '404':
          $ref: '#/components/responses/NotFound'

    put:
      tags:
        - Credit Cards
      summary: Atualizar Cartão de Crédito
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreditCard'
      responses:
        '200':
          description: Cartão atualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditCard'
        '400':
          $ref: '#/components/responses/ValidationError'

    delete:
      tags:
        - Credit Cards
      summary: Excluir Cartão de Crédito
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Cartão excluído com sucesso

  # Credit Card Bills endpoints
  /credit-cards-bills/:
    get:
      tags:
        - Credit Card Bills
      summary: Listar Faturas de Cartão
      responses:
        '200':
          description: Lista de faturas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CreditCardBill'

    post:
      tags:
        - Credit Card Bills
      summary: Criar Fatura de Cartão
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreditCardBill'
      responses:
        '201':
          description: Fatura criada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditCardBill'

  /credit-cards-bills/{id}/:
    get:
      tags:
        - Credit Card Bills
      summary: Obter Fatura de Cartão
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Detalhes da fatura
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditCardBill'

    put:
      tags:
        - Credit Card Bills
      summary: Atualizar Fatura de Cartão
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreditCardBill'
      responses:
        '200':
          description: Fatura atualizada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditCardBill'

    delete:
      tags:
        - Credit Card Bills
      summary: Excluir Fatura de Cartão
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Fatura excluída com sucesso

  # Credit Card Expenses endpoints
  /credit-cards-expenses/:
    get:
      tags:
        - Credit Card Expenses
      summary: Listar Despesas de Cartão
      responses:
        '200':
          description: Lista de despesas de cartão
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CreditCardExpense'

    post:
      tags:
        - Credit Card Expenses
      summary: Criar Despesa de Cartão
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreditCardExpense'
      responses:
        '201':
          description: Despesa de cartão criada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditCardExpense'

  /credit-cards-expenses/{id}/:
    get:
      tags:
        - Credit Card Expenses
      summary: Obter Despesa de Cartão
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Detalhes da despesa de cartão
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditCardExpense'

    put:
      tags:
        - Credit Card Expenses
      summary: Atualizar Despesa de Cartão
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreditCardExpense'
      responses:
        '200':
          description: Despesa de cartão atualizada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditCardExpense'

    delete:
      tags:
        - Credit Card Expenses
      summary: Excluir Despesa de Cartão
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Despesa de cartão excluída com sucesso

  # Expenses endpoints
  /expenses/:
    get:
      tags:
        - Expenses
      summary: Listar Despesas
      description: Lista despesas com filtros opcionais
      parameters:
        - name: category
          in: query
          schema:
            $ref: '#/components/schemas/ExpenseCategory'
        - name: payed
          in: query
          schema:
            type: boolean
        - name: account
          in: query
          schema:
            type: integer
        - name: date_from
          in: query
          schema:
            type: string
            format: date
        - name: date_to
          in: query
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Lista de despesas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Expense'

    post:
      tags:
        - Expenses
      summary: Criar Despesa
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Expense'
      responses:
        '201':
          description: Despesa criada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expense'

  /expenses/{id}/:
    get:
      tags:
        - Expenses
      summary: Obter Despesa
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Detalhes da despesa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expense'

    put:
      tags:
        - Expenses
      summary: Atualizar Despesa
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Expense'
      responses:
        '200':
          description: Despesa atualizada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expense'

    delete:
      tags:
        - Expenses
      summary: Excluir Despesa
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Despesa excluída com sucesso

  # Revenues endpoints
  /revenues/:
    get:
      tags:
        - Revenues
      summary: Listar Receitas
      responses:
        '200':
          description: Lista de receitas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Revenue'

    post:
      tags:
        - Revenues
      summary: Criar Receita
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Revenue'
      responses:
        '201':
          description: Receita criada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Revenue'

  /revenues/{id}/:
    get:
      tags:
        - Revenues
      summary: Obter Receita
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Detalhes da receita
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Revenue'

    put:
      tags:
        - Revenues
      summary: Atualizar Receita
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Revenue'
      responses:
        '200':
          description: Receita atualizada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Revenue'

    delete:
      tags:
        - Revenues
      summary: Excluir Receita
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Receita excluída com sucesso

  # Members endpoints
  /members/:
    get:
      tags:
        - Members
      summary: Listar Membros
      parameters:
        - name: is_creditor
          in: query
          schema:
            type: boolean
        - name: is_benefited
          in: query
          schema:
            type: boolean
        - name: active
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: Lista de membros
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Member'

    post:
      tags:
        - Members
      summary: Criar Membro
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Member'
      responses:
        '201':
          description: Membro criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'

  /members/{id}/:
    get:
      tags:
        - Members
      summary: Obter Membro
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Detalhes do membro
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'

    put:
      tags:
        - Members
      summary: Atualizar Membro
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Member'
      responses:
        '200':
          description: Membro atualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'

    delete:
      tags:
        - Members
      summary: Excluir Membro
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Membro excluído com sucesso

  # Loans endpoints
  /loans/:
    get:
      tags:
        - Loans
      summary: Listar Empréstimos
      responses:
        '200':
          description: Lista de empréstimos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Loan'

    post:
      tags:
        - Loans
      summary: Criar Empréstimo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Loan'
      responses:
        '201':
          description: Empréstimo criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Loan'

  /loans/{id}/:
    get:
      tags:
        - Loans
      summary: Obter Empréstimo
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Detalhes do empréstimo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Loan'

    put:
      tags:
        - Loans
      summary: Atualizar Empréstimo
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Loan'
      responses:
        '200':
          description: Empréstimo atualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Loan'

    delete:
      tags:
        - Loans
      summary: Excluir Empréstimo
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Empréstimo excluído com sucesso

  # Transfers endpoints
  /transfers/:
    get:
      tags:
        - Transfers
      summary: Listar Transferências
      responses:
        '200':
          description: Lista de transferências
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transfer'

    post:
      tags:
        - Transfers
      summary: Criar Transferência
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transfer'
      responses:
        '201':
          description: Transferência criada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'

  /transfers/{id}/:
    get:
      tags:
        - Transfers
      summary: Obter Transferência
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Detalhes da transferência
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'

    put:
      tags:
        - Transfers
      summary: Atualizar Transferência
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transfer'
      responses:
        '200':
          description: Transferência atualizada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'

    delete:
      tags:
        - Transfers
      summary: Excluir Transferência
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Transferência excluída com sucesso

  # Health & Status endpoints
  /health/:
    get:
      tags:
        - Health
      summary: Health Check
      description: Verifica se a aplicação está saudável
      security: []
      responses:
        '200':
          description: Aplicação saudável
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheck'

  /ready/:
    get:
      tags:
        - Health
      summary: Ready Check
      description: Verifica se a aplicação está pronta para receber requisições
      security: []
      responses:
        '200':
          description: Aplicação pronta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheck'

  /live/:
    get:
      tags:
        - Health
      summary: Live Check
      description: Verifica se a aplicação está ativa
      security: []
      responses:
        '200':
          description: Aplicação ativa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheck'

  # Common response components
components:
  responses:
    ValidationError:
      description: Erro de validação
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ValidationError'

    Unauthorized:
      description: Não autorizado
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthenticationError'

    Forbidden:
      description: Sem permissão
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PermissionError'

    NotFound:
      description: Recurso não encontrado
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotFoundError'

tags:
  - name: Authentication
    description: Autenticação JWT e gerenciamento de usuários
  - name: Accounts
    description: Gerenciamento de contas bancárias
  - name: Credit Cards
    description: Gerenciamento de cartões de crédito
  - name: Credit Card Bills
    description: Gerenciamento de faturas de cartão
  - name: Credit Card Expenses
    description: Gerenciamento de despesas de cartão
  - name: Expenses
    description: Gerenciamento de despesas
  - name: Revenues
    description: Gerenciamento de receitas
  - name: Members
    description: Gerenciamento de membros (usuários, credores, beneficiários)
  - name: Loans
    description: Gerenciamento de empréstimos
  - name: Transfers
    description: Gerenciamento de transferências entre contas
  - name: Health
    description: Endpoints de monitoramento da aplicação